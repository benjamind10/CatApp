{"ast":null,"code":"var _jsxFileName = \"/Users/benjaminduran/Documents/react/catapp_fullstack/client/src/pages/Images.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { Container, FormGroup, Row, Col, Alert } from 'reactstrap';\nimport Autosuggest from 'react-autosuggest';\nimport { fetchBreeds, fetchBreedImages, fetchRandomImages } from '../api';\nimport Navigation from '../components/Navbar';\nimport CustomButton from '../components/CustomButton';\nimport '../css/Image.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Images() {\n  _s();\n  const [breedInput, setBreedInput] = useState('');\n  const [allBreeds, setAllBreeds] = useState([]);\n  const [selectedBreedImages, setSelectedBreedImages] = useState([]);\n  const [noBreedFound, setNoBreedFound] = useState(false);\n  const [suggestions, setSuggestions] = useState([]);\n  useEffect(() => {\n    const loadAllBreeds = async () => {\n      const breeds = await fetchBreeds();\n      setAllBreeds(breeds);\n    };\n    loadAllBreeds();\n  }, []);\n  const onSuggestionsFetchRequested = _ref => {\n    let {\n      value\n    } = _ref;\n    setSuggestions(getSuggestions(value, allBreeds));\n  };\n  const onSuggestionsClearRequested = () => {\n    setSuggestions([]);\n  };\n  const getSuggestions = (value, breeds) => {\n    const inputValue = value.trim().toLowerCase();\n    const inputLength = inputValue.length;\n    return inputLength === 0 ? [] : breeds.filter(breed => breed.name.toLowerCase().includes(inputValue));\n  };\n  const getSuggestionValue = suggestion => suggestion.name;\n  const renderSuggestion = suggestion => /*#__PURE__*/_jsxDEV(\"div\", {\n    children: suggestion.name\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 42\n  }, this);\n  const handleInputChange = (event, _ref2) => {\n    let {\n      newValue\n    } = _ref2;\n    setBreedInput(newValue || '');\n  };\n  const handleFetchBreedImages = async () => {\n    const breed = allBreeds.find(breed => breed.name.toLowerCase() === breedInput.toLowerCase());\n    if (!breed) {\n      setNoBreedFound(true);\n      return;\n    }\n    try {\n      const images = await fetchBreedImages(breed.id);\n      setNoBreedFound(false);\n      setSelectedBreedImages(images);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n  const handleFetchRandomImages = async () => {\n    try {\n      const images = await fetchRandomImages(10); // get 10 random images\n      setNoBreedFound(false);\n      setSelectedBreedImages(images);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n  const inputProps = {\n    placeholder: 'Enter breed...',\n    value: breedInput,\n    onChange: handleInputChange\n  };\n  const theme = {\n    input: 'form-control mb-3'\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Navigation, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"text-center my-3\",\n        children: \"Images\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n        className: \"mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(Autosuggest, {\n          suggestions: suggestions,\n          onSuggestionsFetchRequested: onSuggestionsFetchRequested,\n          onSuggestionsClearRequested: onSuggestionsClearRequested,\n          getSuggestionValue: getSuggestionValue,\n          renderSuggestion: renderSuggestion,\n          inputProps: inputProps,\n          theme: theme,\n          onSuggestionSelected: (event, _ref3) => {\n            let {\n              suggestion,\n              suggestionValue,\n              suggestionIndex,\n              sectionIndex,\n              method\n            } = _ref3;\n            event.preventDefault();\n            setBreedInput(suggestionValue);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Row, {\n          className: \"justify-content-center\",\n          children: [/*#__PURE__*/_jsxDEV(Col, {\n            xs: \"auto\",\n            children: /*#__PURE__*/_jsxDEV(CustomButton, {\n              color: \"primary\",\n              onClick: handleFetchBreedImages,\n              children: \"Search\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 122,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            xs: \"auto\",\n            children: /*#__PURE__*/_jsxDEV(CustomButton, {\n              color: \"secondary\",\n              onClick: handleFetchRandomImages,\n              children: \"Random Images\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 127,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 11\n        }, this), noBreedFound && /*#__PURE__*/_jsxDEV(Alert, {\n          color: \"danger\",\n          className: \"mt-2\",\n          children: \"No breed found\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this), selectedBreedImages.map((image, index) => /*#__PURE__*/_jsxDEV(\"img\", {\n        src: image.url,\n        alt: \"Breed\",\n        style: {\n          width: '50%',\n          height: 'auto'\n        }\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(Images, \"iY/gMftKBbwbKksaKJ8JJSNPDm0=\");\n_c = Images;\nexport default Images;\nvar _c;\n$RefreshReg$(_c, \"Images\");","map":{"version":3,"names":["React","useEffect","useState","Container","FormGroup","Row","Col","Alert","Autosuggest","fetchBreeds","fetchBreedImages","fetchRandomImages","Navigation","CustomButton","jsxDEV","_jsxDEV","Fragment","_Fragment","Images","_s","breedInput","setBreedInput","allBreeds","setAllBreeds","selectedBreedImages","setSelectedBreedImages","noBreedFound","setNoBreedFound","suggestions","setSuggestions","loadAllBreeds","breeds","onSuggestionsFetchRequested","_ref","value","getSuggestions","onSuggestionsClearRequested","inputValue","trim","toLowerCase","inputLength","length","filter","breed","name","includes","getSuggestionValue","suggestion","renderSuggestion","children","fileName","_jsxFileName","lineNumber","columnNumber","handleInputChange","event","_ref2","newValue","handleFetchBreedImages","find","images","id","error","console","handleFetchRandomImages","inputProps","placeholder","onChange","theme","input","className","onSuggestionSelected","_ref3","suggestionValue","suggestionIndex","sectionIndex","method","preventDefault","xs","color","onClick","map","image","index","src","url","alt","style","width","height","_c","$RefreshReg$"],"sources":["/Users/benjaminduran/Documents/react/catapp_fullstack/client/src/pages/Images.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { Container, FormGroup, Row, Col, Alert } from 'reactstrap';\nimport Autosuggest from 'react-autosuggest';\n\nimport { fetchBreeds, fetchBreedImages, fetchRandomImages } from '../api';\nimport Navigation from '../components/Navbar';\nimport CustomButton from '../components/CustomButton';\n\nimport '../css/Image.css';\n\nfunction Images() {\n  const [breedInput, setBreedInput] = useState('');\n  const [allBreeds, setAllBreeds] = useState([]);\n  const [selectedBreedImages, setSelectedBreedImages] = useState([]);\n  const [noBreedFound, setNoBreedFound] = useState(false);\n  const [suggestions, setSuggestions] = useState([]);\n\n  useEffect(() => {\n    const loadAllBreeds = async () => {\n      const breeds = await fetchBreeds();\n      setAllBreeds(breeds);\n    };\n\n    loadAllBreeds();\n  }, []);\n\n  const onSuggestionsFetchRequested = ({ value }) => {\n    setSuggestions(getSuggestions(value, allBreeds));\n  };\n\n  const onSuggestionsClearRequested = () => {\n    setSuggestions([]);\n  };\n\n  const getSuggestions = (value, breeds) => {\n    const inputValue = value.trim().toLowerCase();\n    const inputLength = inputValue.length;\n\n    return inputLength === 0\n      ? []\n      : breeds.filter(breed => breed.name.toLowerCase().includes(inputValue));\n  };\n\n  const getSuggestionValue = suggestion => suggestion.name;\n\n  const renderSuggestion = suggestion => <div>{suggestion.name}</div>;\n\n  const handleInputChange = (event, { newValue }) => {\n    setBreedInput(newValue || '');\n  };\n\n  const handleFetchBreedImages = async () => {\n    const breed = allBreeds.find(\n      breed => breed.name.toLowerCase() === breedInput.toLowerCase()\n    );\n\n    if (!breed) {\n      setNoBreedFound(true);\n      return;\n    }\n\n    try {\n      const images = await fetchBreedImages(breed.id);\n      setNoBreedFound(false);\n      setSelectedBreedImages(images);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  const handleFetchRandomImages = async () => {\n    try {\n      const images = await fetchRandomImages(10); // get 10 random images\n      setNoBreedFound(false);\n      setSelectedBreedImages(images);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  const inputProps = {\n    placeholder: 'Enter breed...',\n    value: breedInput,\n    onChange: handleInputChange,\n  };\n\n  const theme = {\n    input: 'form-control mb-3',\n  };\n\n  return (\n    <>\n      <Navigation />\n      <Container>\n        <h1 className=\"text-center my-3\">Images</h1>\n        <FormGroup className=\"mb-3\">\n          <Autosuggest\n            suggestions={suggestions}\n            onSuggestionsFetchRequested={onSuggestionsFetchRequested}\n            onSuggestionsClearRequested={onSuggestionsClearRequested}\n            getSuggestionValue={getSuggestionValue}\n            renderSuggestion={renderSuggestion}\n            inputProps={inputProps}\n            theme={theme}\n            onSuggestionSelected={(\n              event,\n              {\n                suggestion,\n                suggestionValue,\n                suggestionIndex,\n                sectionIndex,\n                method,\n              }\n            ) => {\n              event.preventDefault();\n\n              setBreedInput(suggestionValue);\n            }}\n          />\n          <Row className=\"justify-content-center\">\n            <Col xs=\"auto\">\n              <CustomButton color=\"primary\" onClick={handleFetchBreedImages}>\n                Search\n              </CustomButton>\n            </Col>\n            <Col xs=\"auto\">\n              <CustomButton color=\"secondary\" onClick={handleFetchRandomImages}>\n                Random Images\n              </CustomButton>\n            </Col>\n          </Row>\n          {noBreedFound && (\n            <Alert color=\"danger\" className=\"mt-2\">\n              No breed found\n            </Alert>\n          )}\n        </FormGroup>\n        {selectedBreedImages.map((image, index) => (\n          <img\n            key={index}\n            src={image.url}\n            alt=\"Breed\"\n            style={{ width: '50%', height: 'auto' }}\n          />\n        ))}\n      </Container>\n    </>\n  );\n}\n\nexport default Images;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}