{"ast":null,"code":"var _jsxFileName = \"/Users/benjaminduran/Documents/react/catapp_fullstack/client/src/pages/SignUpForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Button, Form, FormGroup, Label, Input, Container } from 'reactstrap';\nimport { useNavigate } from 'react-router-dom';\nimport Navigation from '../components/Navbar';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction SignUpForm() {\n  _s();\n  const navigate = useNavigate();\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [email, setEmail] = useState('');\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const data = {\n      username,\n      password,\n      email\n    };\n    try {\n      const serverIP = process.env.REACT_APP_API;\n      const response = await fetch(`${serverIP}/user/register`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(data)\n      });\n      console.log(data);\n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n      } else {\n        // You can perform actions on successful user creation here.\n        console.log('User successfully created');\n        navigate('/');\n      }\n    } catch (error) {\n      console.error('Error:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Navigation, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Sign Up\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form, {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(FormGroup, {\n          children: [/*#__PURE__*/_jsxDEV(Label, {\n            for: \"username\",\n            children: \"Username\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            type: \"text\",\n            name: \"username\",\n            id: \"username\",\n            placeholder: \"Enter your username\",\n            value: username,\n            onChange: e => setUsername(e.target.value),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n          children: [/*#__PURE__*/_jsxDEV(Label, {\n            for: \"password\",\n            children: \"Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            type: \"password\",\n            name: \"password\",\n            id: \"password\",\n            placeholder: \"Enter your password\",\n            value: password,\n            onChange: e => setPassword(e.target.value),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n          children: [/*#__PURE__*/_jsxDEV(Label, {\n            for: \"email\",\n            children: \"Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            type: \"text\",\n            name: \"email\",\n            id: \"email\",\n            placeholder: \"Enter your email\",\n            value: email,\n            onChange: e => setEmail(e.target.value),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          children: \"Sign Up\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(SignUpForm, \"UkzvwVEOLCz152hj6dP2zBtuaPU=\", false, function () {\n  return [useNavigate];\n});\n_c = SignUpForm;\nexport default SignUpForm;\nvar _c;\n$RefreshReg$(_c, \"SignUpForm\");","map":{"version":3,"names":["React","useState","Button","Form","FormGroup","Label","Input","Container","useNavigate","Navigation","jsxDEV","_jsxDEV","Fragment","_Fragment","SignUpForm","_s","navigate","username","setUsername","password","setPassword","email","setEmail","handleSubmit","e","preventDefault","data","serverIP","process","env","REACT_APP_API","response","fetch","method","headers","body","JSON","stringify","console","log","ok","Error","status","error","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","for","type","name","id","placeholder","value","onChange","target","required","_c","$RefreshReg$"],"sources":["/Users/benjaminduran/Documents/react/catapp_fullstack/client/src/pages/SignUpForm.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { Button, Form, FormGroup, Label, Input, Container } from 'reactstrap';\nimport { useNavigate } from 'react-router-dom';\n\nimport Navigation from '../components/Navbar';\n\nfunction SignUpForm() {\n  const navigate = useNavigate();\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [email, setEmail] = useState('');\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n\n    const data = { username, password, email };\n\n    try {\n      const serverIP = process.env.REACT_APP_API;\n\n      const response = await fetch(`${serverIP}/user/register`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(data),\n      });\n      console.log(data);\n\n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n      } else {\n        // You can perform actions on successful user creation here.\n        console.log('User successfully created');\n        navigate('/');\n      }\n    } catch (error) {\n      console.error('Error:', error);\n    }\n  };\n\n  return (\n    <>\n      <Navigation />\n      <Container>\n        <h2>Sign Up</h2>\n        <Form onSubmit={handleSubmit}>\n          <FormGroup>\n            <Label for=\"username\">Username</Label>\n            <Input\n              type=\"text\"\n              name=\"username\"\n              id=\"username\"\n              placeholder=\"Enter your username\"\n              value={username}\n              onChange={e => setUsername(e.target.value)}\n              required\n            />\n          </FormGroup>\n          <FormGroup>\n            <Label for=\"password\">Password</Label>\n            <Input\n              type=\"password\"\n              name=\"password\"\n              id=\"password\"\n              placeholder=\"Enter your password\"\n              value={password}\n              onChange={e => setPassword(e.target.value)}\n              required\n            />\n          </FormGroup>\n          <FormGroup>\n            <Label for=\"email\">Email</Label>\n            <Input\n              type=\"text\"\n              name=\"email\"\n              id=\"email\"\n              placeholder=\"Enter your email\"\n              value={email}\n              onChange={e => setEmail(e.target.value)}\n              required\n            />\n          </FormGroup>\n          <Button type=\"submit\">Sign Up</Button>\n        </Form>\n      </Container>\n    </>\n  );\n}\n\nexport default SignUpForm;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}